/* ========== 积木节点样式 ========== */
.block-node {
  position: relative;
  min-width: 220px;
  padding: var(--spacing-md);
  padding-top: var(--spacing-xl);
  padding-bottom: var(--spacing-xl);
  background: var(--bg-white);
  border: var(--border-width-thick) solid var(--border-color);
  border-left: 5px solid #3b82f6;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  cursor: move;
  transition: box-shadow var(--transition-base);
  user-select: none;
}

/* 容器类积木的浅紫色背景 */
.block-node.container-block {
  background: var(--bg-container);
}

.block-node:hover {
  box-shadow: var(--shadow-lg);
  transform: translateY(-2px);
}

.block-node.selected {
  border-color: var(--color-primary);
  box-shadow: var(--shadow-primary);
  animation: selected-glow 2s ease-in-out infinite;
}

.block-node.dragging {
  opacity: 0.8;
  cursor: grabbing;
  box-shadow: var(--shadow-xl);
  z-index: var(--z-dragging);
  transform: none !important;
  pointer-events: none; /* 让拖拽的元素不阻挡鼠标事件，使事件能穿透到下面的插槽 */
}

/* ========== 积木头部 ========== */
.block-node-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-sm);
}

.block-node-label {
  font-weight: var(--font-semibold);
  font-size: var(--font-md);
  color: var(--color-gray-800);
}

.block-node-delete {
  padding: 0.2rem;
  background: transparent;
  border: none;
  border-radius: var(--radius-sm);
  cursor: pointer;
  color: var(--color-gray-400);
  transition: var(--transition-all);
}

.block-node-delete:hover {
  background: var(--color-danger-bg);
  color: var(--color-danger);
}

/* ========== 参数显示 ========== */
.block-node-params {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.param-display {
  display: flex;
  gap: var(--spacing-sm);
  font-size: var(--font-sm);
}

.param-label {
  color: var(--color-gray-500);
  font-weight: var(--font-medium);
}

.param-value {
  color: var(--color-gray-800);
  font-weight: var(--font-semibold);
}

/* ========== 连接点 ========== */
.connection-point {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--bg-white);
  border: var(--border-width-thick) solid var(--border-color);
  border-radius: var(--radius-full);
  cursor: pointer;
  transition: var(--transition-all);
  z-index: var(--z-dropdown);
}

.connection-point:hover {
  transform: translateX(-50%) scale(1.3);
  border-color: var(--color-primary);
  box-shadow: 0 0 0 4px rgba(79, 70, 229, 0.3);
}

.connection-point:active {
  transform: translateX(-50%) scale(1.15);
  background: var(--color-primary);
}

.connection-input {
  top: -12px;
}

.connection-output {
  bottom: -12px;
}

/* 🔧 循环体连接点（在插槽内部） */
.connection-body-input,
.connection-body-output {
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  width: 20px;
  height: 20px;
  margin: 4px auto;
  background: rgba(147, 51, 234, 0.1); /* 浅紫色背景，更显眼 */
  border: 2px solid #9333ea; /* 紫色边框 */
  border-radius: var(--radius-full);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: crosshair; /* 十字光标表示可以连接 */
  transition: var(--transition-all);
  z-index: 5;
}

.connection-body-input {
  margin-bottom: 8px;
}

.connection-body-output {
  margin-top: 8px;
}

.connection-body-input:hover,
.connection-body-output:hover {
  transform: translateX(-50%) scale(1.3);
  background: rgba(147, 51, 234, 0.2);
  border-color: #7e22ce;
  box-shadow: 0 0 0 3px rgba(147, 51, 234, 0.2);
}

.connection-body-input svg,
.connection-body-output svg {
  stroke: #9333ea;
  stroke-width: 2;
}

.connection-point svg {
  stroke: var(--color-gray-500);
  stroke-width: 1.5;
}

.connection-point:hover svg {
  stroke: var(--color-primary);
}

/* ========== 顺序标记 ========== */
.block-order-badge {
  position: absolute;
  top: -8px;
  right: -8px;
  width: 24px;
  height: 24px;
  background: var(--gradient-purple);
  color: var(--bg-white);
  border-radius: var(--radius-full);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-xs);
  font-weight: var(--font-bold);
  box-shadow: var(--shadow-sm);
  z-index: 5;
}

/* ========== 容器型积木（C型）的样式 ========== */
.block-slots {
  margin-top: var(--spacing-md);
  margin-bottom: var(--spacing-md);
}

.block-slot {
  margin: var(--spacing-md) 0;  /* 增加插槽之间的间距 */
}

.slot-label {
  font-size: 11px;
  font-weight: var(--font-semibold);
  color: var(--color-gray-500);
  margin-bottom: var(--spacing-sm);
  padding: 0 var(--spacing-sm);
}

.slot-drop-zone {
  min-height: 60px;
  background: rgba(243, 244, 246, 0.8);
  border: var(--border-width-thick) dashed var(--border-color-light);
  border-radius: var(--radius-md);
  padding: var(--spacing-md);  /* 增加插槽内的padding */
  margin: 0 var(--spacing-sm);
  transition: var(--transition-all) ease;
  /* 确保插槽内容可见，不使用 max-height 和 overflow: hidden */
  /* 如果内容太多，整个容器会变高，而不是隐藏内容 */
}

.slot-drop-zone:hover {
  background: rgba(243, 244, 246, 1);
  border-color: var(--color-gray-400);
}

.slot-placeholder {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 44px;
  font-size: 12px;
  color: var(--color-gray-400);
  font-style: italic;
  pointer-events: none; /* 让占位符不阻挡鼠标事件 */
}

.slot-children {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);  /* 增加积木之间的间距 */
  /* 不设置 max-height 和 overflow，确保所有子元素都可见 */
  /* 这样连接线才能正确计算位置 */
}

.slot-children .block-node {
  margin: var(--spacing-xs) 0;  /* 添加上下间距 */
  width: 100%;
}

